generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://neondb_owner:eiAUyOG7gx8k@ep-snowy-waterfall-a2cduzte-pooler.eu-central-1.aws.neon.tech/neondb?sslmode=require"
}

model User {
  id Int @id @default(autoincrement())

  login        String  @unique
  email        String  @unique
  password     String
  salt         String
  role         Role    @default(USER)
  balance      Float   @default(0)
  referralCode String  @unique
  isBlocked    Boolean
  referredBy   Int

  deposits     Deposits[]
  withdraws    Withdraws[]
  subsriptions Subscriptions[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Referrals {
  id Int @id @default(autoincrement())

  totalReferrals         Int   @default(0)
  registeredWithPurchase Int   @default(0)
  totalCashback          Float @default(0)

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Deposits {
  id Int @id @default(autoincrement())

  depositSum Float
  type       DepositType
  system     DepositSystem

  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Withdraws {
  id Int @id @default(autoincrement())

  withrdawSum Float
  type        DepositType
  system      DepositSystem

  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Subscriptions {
  id Int @id @default(autoincrement())

  type           SubscriptionType
  price          Int
  trackingNumber Int              @unique
  autorenew      Boolean
  user           User?            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  endDate   DateTime
}

enum DepositSystem {
  USDT
  VISA
  ADMINRECHARGE
}

enum DepositType {
  TOPUP
  WITHDRAW
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
}

enum SubscriptionType {
  BASIC
  FAST
  TURBO
}

enum Role {
  USER
  ADMIN
  RESELLER
  PARTNER
  VIPPARTNER
  DISTRIBUTOR
  INFLUENCER
}
